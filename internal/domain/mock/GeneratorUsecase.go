// Code generated by mockery v2.20.0. DO NOT EDIT.

package mock

import (
	generator "github.com/nkien0204/lets-go/internal/domain/entity/generator"
	mock "github.com/stretchr/testify/mock"
)

// GeneratorUsecase is an autogenerated mock type for the GeneratorUsecase type
type GeneratorUsecase struct {
	mock.Mock
}

// Generate provides a mock function with given fields: _a0
func (_m *GeneratorUsecase) Generate(_a0 generator.GeneratorInputEntity) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(generator.GeneratorInputEntity) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewGeneratorUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewGeneratorUsecase creates a new instance of GeneratorUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGeneratorUsecase(t mockConstructorTestingTNewGeneratorUsecase) *GeneratorUsecase {
	mock := &GeneratorUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
