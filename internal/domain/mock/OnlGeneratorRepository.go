// Code generated by mockery v2.20.0. DO NOT EDIT.

package mock

import (
	generator "github.com/nkien0204/lets-go/internal/domain/entity/generator"
	mock "github.com/stretchr/testify/mock"
)

// OnlGeneratorRepository is an autogenerated mock type for the OnlGeneratorRepository type
type OnlGeneratorRepository struct {
	mock.Mock
}

// DownloadLatestAsset provides a mock function with given fields: _a0
func (_m *OnlGeneratorRepository) DownloadLatestAsset(_a0 generator.LatestAssetDownloadRequestEntity) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(generator.LatestAssetDownloadRequestEntity) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetRepoLatestVersion provides a mock function with given fields:
func (_m *OnlGeneratorRepository) GetRepoLatestVersion() (generator.RepoLatestVersionGetEntity, error) {
	ret := _m.Called()

	var r0 generator.RepoLatestVersionGetEntity
	var r1 error
	if rf, ok := ret.Get(0).(func() (generator.RepoLatestVersionGetEntity, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() generator.RepoLatestVersionGetEntity); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(generator.RepoLatestVersionGetEntity)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewOnlGeneratorRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewOnlGeneratorRepository creates a new instance of OnlGeneratorRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOnlGeneratorRepository(t mockConstructorTestingTNewOnlGeneratorRepository) *OnlGeneratorRepository {
	mock := &OnlGeneratorRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
