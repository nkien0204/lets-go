// Code generated by mockery v2.20.0. DO NOT EDIT.

package mock

import (
	generator "github.com/nkien0204/lets-go/internal/domain/entity/generator"
	mock "github.com/stretchr/testify/mock"
)

// OffGeneratorRepository is an autogenerated mock type for the OffGeneratorRepository type
type OffGeneratorRepository struct {
	mock.Mock
}

// RenderTemplate provides a mock function with given fields: inputEntity
func (_m *OffGeneratorRepository) RenderTemplate(inputEntity generator.GeneratorInputEntity) error {
	ret := _m.Called(inputEntity)

	var r0 error
	if rf, ok := ret.Get(0).(func(generator.GeneratorInputEntity) error); ok {
		r0 = rf(inputEntity)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewOffGeneratorRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewOffGeneratorRepository creates a new instance of OffGeneratorRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOffGeneratorRepository(t mockConstructorTestingTNewOffGeneratorRepository) *OffGeneratorRepository {
	mock := &OffGeneratorRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
